{"ast":null,"code":"var _jsxFileName = \"/home/and/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443 4/frontend/src/components/Lists/ListProducts/ItemViewProduct .tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ItemProduct from './ItemProduct';\nimport { useQuery } from 'react-query';\nimport { productService } from '../../../services';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemViewProduct = _ref => {\n  _s();\n  let {\n    storeOne,\n    storeTwo,\n    storeTree\n  } = _ref;\n  const pizzaDay = {\n    food_id: 1,\n    food_name: 'Pepperoni',\n    food_price: 145,\n    food_img: 'https://pizzaday.eatery.club/storage/pizzaday/product/icon/1344/26f343c40875959617a836ebad4cf0ff.jpg'\n  };\n\n  // const { data: pizzaDay, isLoading: isLoadingPizzaDay } = useQuery('PizzaDay', () => {\n  //   return productService.getPizzaDay();\n  // });\n\n  const {\n    data: kfc,\n    isLoading: isLoadingKFC\n  } = useQuery('KFC', () => {\n    return productService.getKFC();\n  });\n  const {\n    data: iqPizza,\n    isLoading: isLoadingIQpizza\n  } = useQuery('IQpizza ', () => {\n    return productService.getIQpizza();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 grid space-x-5 grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading\"\n    }, void 0, false), \") : storeOne && Array.isArray(pizzaDay) ? ( pizzaDay.map((product: foodType, id: number) => \", /*#__PURE__*/_jsxDEV(ItemProduct, {\n      product: product\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 57\n    }, this), \") ) : (\", /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \")}\", isLoadingIQpizza ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading\"\n    }, void 0, false) : storeTwo && Array.isArray(iqPizza) ? iqPizza.map((product, id) => /*#__PURE__*/_jsxDEV(ItemProduct, {\n      product: product\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 56\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), isLoadingKFC ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading\"\n    }, void 0, false) : storeTree && Array.isArray(kfc) ? kfc === null || kfc === void 0 ? void 0 : kfc.map((product, id) => /*#__PURE__*/_jsxDEV(ItemProduct, {\n      product: product\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 53\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemViewProduct, \"3NOnXanO2IG+JiVM91PMAZvpaEk=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = ItemViewProduct;\nexport default ItemViewProduct;\nvar _c;\n$RefreshReg$(_c, \"ItemViewProduct\");","map":{"version":3,"names":["React","ItemProduct","useQuery","productService","Fragment","_Fragment","jsxDEV","_jsxDEV","ItemViewProduct","_ref","_s","storeOne","storeTwo","storeTree","pizzaDay","food_id","food_name","food_price","food_img","data","kfc","isLoading","isLoadingKFC","getKFC","iqPizza","isLoadingIQpizza","getIQpizza","className","children","product","id","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","_c","$RefreshReg$"],"sources":["/home/and/Рабочий стол/Создать папку 4/frontend/src/components/Lists/ListProducts/ItemViewProduct .tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport ItemProduct from './ItemProduct';\nimport { useQuery } from 'react-query';\nimport { productService } from '../../../services';\nimport { foodType } from '../../../types';\n\ninterface ItemViewProductProps {\n  storeOne: boolean;\n  storeTwo: boolean;\n  storeTree: boolean;\n}\n\nconst ItemViewProduct: FC<ItemViewProductProps> = ({ storeOne, storeTwo, storeTree }) => {\n\n\nconst pizzaDay = {\n  food_id: 1,\n  food_name:'Pepperoni',\n  food_price:145,\n  food_img: 'https://pizzaday.eatery.club/storage/pizzaday/product/icon/1344/26f343c40875959617a836ebad4cf0ff.jpg',\n}\n\n  // const { data: pizzaDay, isLoading: isLoadingPizzaDay } = useQuery('PizzaDay', () => {\n  //   return productService.getPizzaDay();\n  // });\n\n  const { data: kfc, isLoading: isLoadingKFC } = useQuery('KFC', () => {\n    return productService.getKFC();\n  });\n\n  const { data: iqPizza, isLoading: isLoadingIQpizza } = useQuery('IQpizza ', () => {\n    return productService.getIQpizza();\n  });\n\n  return (\n    <div className='mt-6 grid space-x-5 grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8'>\n    \n        <>Loading</>\n      ) : storeOne && Array.isArray(pizzaDay) ? (\n        pizzaDay.map((product: foodType, id: number) => <ItemProduct key={id} product={product} />)\n      ) : (\n        <></>\n      )}\n\n      {isLoadingIQpizza ? (\n        <>Loading</>\n      ) : storeTwo && Array.isArray(iqPizza) ? (\n        iqPizza.map((product: foodType, id: number) => <ItemProduct key={id} product={product} />)\n      ) : (\n        <></>\n      )}\n      {isLoadingKFC ? (\n        <>Loading</>\n      ) : storeTree && Array.isArray(kfc) ? (\n        kfc?.map((product: foodType, id: number) => <ItemProduct key={id} product={product} />)\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nexport default ItemViewProduct;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASnD,MAAMC,eAAyC,GAAGC,IAAA,IAAuC;EAAAC,EAAA;EAAA,IAAtC;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EAGpF,MAAMK,QAAQ,GAAG;IACfC,OAAO,EAAE,CAAC;IACVC,SAAS,EAAC,WAAW;IACrBC,UAAU,EAAC,GAAG;IACdC,QAAQ,EAAE;EACZ,CAAC;;EAEC;EACA;EACA;;EAEA,MAAM;IAAEC,IAAI,EAAEC,GAAG;IAAEC,SAAS,EAAEC;EAAa,CAAC,GAAGpB,QAAQ,CAAC,KAAK,EAAE,MAAM;IACnE,OAAOC,cAAc,CAACoB,MAAM,CAAC,CAAC;EAChC,CAAC,CAAC;EAEF,MAAM;IAAEJ,IAAI,EAAEK,OAAO;IAAEH,SAAS,EAAEI;EAAiB,CAAC,GAAGvB,QAAQ,CAAC,UAAU,EAAE,MAAM;IAChF,OAAOC,cAAc,CAACuB,UAAU,CAAC,CAAC;EACpC,CAAC,CAAC;EAEF,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,2FAA2F;IAAAC,QAAA,gBAEtGrB,OAAA,CAAAF,SAAA;MAAAuB,QAAA,EAAE;IAAO,gBAAE,CAAC,gGAEoC,eAAArB,OAAA,CAACN,WAAW;MAAU4B,OAAO,EAAEA;IAAQ,GAArBC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC,WAE1F,eAAA3B,OAAA,CAAAF,SAAA,mBAAI,CAAC,MAGP,EAACoB,gBAAgB,gBACflB,OAAA,CAAAF,SAAA;MAAAuB,QAAA,EAAE;IAAO,gBAAE,CAAC,GACVhB,QAAQ,IAAIuB,KAAK,CAACC,OAAO,CAACZ,OAAO,CAAC,GACpCA,OAAO,CAACa,GAAG,CAAC,CAACR,OAAiB,EAAEC,EAAU,kBAAKvB,OAAA,CAACN,WAAW;MAAU4B,OAAO,EAAEA;IAAQ,GAArBC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC,CAAC,gBAE1F3B,OAAA,CAAAF,SAAA,mBAAI,CACL,EACAiB,YAAY,gBACXf,OAAA,CAAAF,SAAA;MAAAuB,QAAA,EAAE;IAAO,gBAAE,CAAC,GACVf,SAAS,IAAIsB,KAAK,CAACC,OAAO,CAAChB,GAAG,CAAC,GACjCA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEiB,GAAG,CAAC,CAACR,OAAiB,EAAEC,EAAU,kBAAKvB,OAAA,CAACN,WAAW;MAAU4B,OAAO,EAAEA;IAAQ,GAArBC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC,CAAC,gBAEvF3B,OAAA,CAAAF,SAAA,mBAAI,CACL;EAAA;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhDIF,eAAyC;EAAA,QAcEN,QAAQ,EAIAA,QAAQ;AAAA;AAAAoC,EAAA,GAlB3D9B,eAAyC;AAkD/C,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}