{"ast":null,"code":"var _jsxFileName = \"/home/and/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443 4/frontend/src/components/FormUser/ButtonCreateUserOrder.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocalStorageService } from '../../hooks';\nimport { useSelector } from 'react-redux';\nimport { validateFormUser } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonCreateUser = _ref => {\n  _s();\n  let {\n    username,\n    email,\n    phone,\n    address,\n    orderAllRemove,\n    removeChange\n  } = _ref;\n  const userOrder = useSelector(state => state.order.userOrder);\n  const onButtonClick = event => {\n    event.preventDefault();\n    const validate = validateFormUser({\n      username,\n      phone,\n      email,\n      address\n    });\n    if (validate) {\n      const localStorageService = new useLocalStorageService();\n      for (let i = 0; i < userOrder.length; i++) {\n        const id = userOrder[i].food_id;\n        localStorageService.setItem('userOrder', {\n          ...userOrder[i],\n          user_id: id\n        });\n        localStorageService.getItem('userOrder');\n      }\n      ;\n    }\n    orderAllRemove();\n    removeChange();\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"rounded-md bg-cyan-300 px-2.5 py-1.5  w-24 text-lg  text-gray-900 shadow-sm ring-1 ring-inset\",\n    onClick: event => onButtonClick(event),\n    children: \"Submit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonCreateUser, \"n8fMXw8Q5rUie07tVL9Vmr5DuJA=\", false, function () {\n  return [useSelector];\n});\n_c = ButtonCreateUser;\nexport default ButtonCreateUser;\nvar _c;\n$RefreshReg$(_c, \"ButtonCreateUser\");","map":{"version":3,"names":["React","useLocalStorageService","useSelector","validateFormUser","jsxDEV","_jsxDEV","ButtonCreateUser","_ref","_s","username","email","phone","address","orderAllRemove","removeChange","userOrder","state","order","onButtonClick","event","preventDefault","validate","localStorageService","i","length","id","food_id","setItem","user_id","getItem","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/and/Рабочий стол/Создать папку 4/frontend/src/components/FormUser/ButtonCreateUserOrder.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { useCreateOrder, useCreateUser, useFindUser, useLocalStorageService } from '../../hooks';\n\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../store/store';\nimport { userType } from '../../types';\nimport { validateFormUser } from '../../helpers';\n\ninterface ButtonProps {\n  username: string;\n  email: string;\n  phone: string;\n  address: string;\n  orderAllRemove: () => void;\n  removeChange: () => void;\n}\n\nconst ButtonCreateUser: FC<ButtonProps> = ({ username,email,phone,address,orderAllRemove,removeChange,}) => {\n  \n  const userOrder = useSelector((state: RootState) => state.order.userOrder);\n\n  const onButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const validate = validateFormUser({ username, phone, email, address });\n\n    if (validate) {\n      const localStorageService = new useLocalStorageService();\n       \n          for (let i = 0; i < userOrder.length; i++) {\n            const id = userOrder[i].food_id;\n            localStorageService.setItem('userOrder', {...userOrder[i], user_id:id});\n             localStorageService.getItem('userOrder')\n            };\n        }\n        orderAllRemove();\n        removeChange();\n      }\n    \n  \n  return (\n    <button\n      className='rounded-md bg-cyan-300 px-2.5 py-1.5  w-24 text-lg  text-gray-900 shadow-sm ring-1 ring-inset'\n      onClick={(event) => onButtonClick(event)}\n    >\n      Submit\n    </button>\n  )\n};\n\nexport default ButtonCreateUser;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAc,OAAO;AAEjC,SAAqDC,sBAAsB,QAAQ,aAAa;AAEhG,SAASC,WAAW,QAAQ,aAAa;AAGzC,SAASC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWjD,MAAMC,gBAAiC,GAAGC,IAAA,IAAkE;EAAAC,EAAA;EAAA,IAAjE;IAAEC,QAAQ;IAACC,KAAK;IAACC,KAAK;IAACC,OAAO;IAACC,cAAc;IAACC;EAAa,CAAC,GAAAP,IAAA;EAErG,MAAMQ,SAAS,GAAGb,WAAW,CAAEc,KAAgB,IAAKA,KAAK,CAACC,KAAK,CAACF,SAAS,CAAC;EAE1E,MAAMG,aAAa,GAAIC,KAA0C,IAAK;IACpEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAGlB,gBAAgB,CAAC;MAAEM,QAAQ;MAAEE,KAAK;MAAED,KAAK;MAAEE;IAAQ,CAAC,CAAC;IAEtE,IAAIS,QAAQ,EAAE;MACZ,MAAMC,mBAAmB,GAAG,IAAIrB,sBAAsB,CAAC,CAAC;MAEpD,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,SAAS,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;QACzC,MAAME,EAAE,GAAGV,SAAS,CAACQ,CAAC,CAAC,CAACG,OAAO;QAC/BJ,mBAAmB,CAACK,OAAO,CAAC,WAAW,EAAE;UAAC,GAAGZ,SAAS,CAACQ,CAAC,CAAC;UAAEK,OAAO,EAACH;QAAE,CAAC,CAAC;QACtEH,mBAAmB,CAACO,OAAO,CAAC,WAAW,CAAC;MACzC;MAAC;IACL;IACAhB,cAAc,CAAC,CAAC;IAChBC,YAAY,CAAC,CAAC;EAChB,CAAC;EAGL,oBACET,OAAA;IACEyB,SAAS,EAAC,+FAA+F;IACzGC,OAAO,EAAGZ,KAAK,IAAKD,aAAa,CAACC,KAAK,CAAE;IAAAa,QAAA,EAC1C;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAAC5B,EAAA,CA9BIF,gBAAiC;EAAA,QAEnBJ,WAAW;AAAA;AAAAmC,EAAA,GAFzB/B,gBAAiC;AAgCvC,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}